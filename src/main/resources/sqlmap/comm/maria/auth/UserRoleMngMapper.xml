<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="comm.auth.userRoleMng">
    <select id="selectRoleUser" resultType="camelHashMap">
    /* comm.userRoleMng.selectRoleUser : 역할별사용자 조회 */
        SELECT 
               A.COM_ID
              ,A.ROLE_ID
              ,D.ROLE_NM AS ROLE_NM
              ,A.USER_NO
              ,B.USER_NM
              ,A.APLY_START_DT
              ,A.APLY_END_DT
              ,A.RMRK
              ,A.PROC_USER_NO
              ,C.USER_NM AS PROC_USER_NM
              ,A.PROC_DTTM
          FROM COMM_ROLE_USER A /* 역할별사용자 */
         INNER JOIN COMM_USER B /* 사용자 */ ON A.COM_ID = B.COM_ID AND A.USER_NO = B.USER_NO
         INNER JOIN COMM_USER C /* 사용자 */ ON A.COM_ID = C.COM_ID AND A.PROC_USER_NO = C.USER_NO
         INNER JOIN COMM_ROLE D /* 역할 */ ON A.COM_ID = D.COM_ID AND A.ROLE_ID = D.ROLE_ID
         WHERE 1=1 
           AND A.COM_ID = #{session.comId}
           <if test="roleId != null and roleId != ''">
           AND A.ROLE_ID = #{roleId}
           </if>
           <if test="userNo != null and userNo != ''">
           AND A.USER_NO = #{userNo}
           </if>
           <if test="aplyStartDt != null and aplyStartDt != ''">
           AND A.APLY_START_DT = #{aplyStartDt}
           </if>
           <if test="aplyEndDt != null and aplyEndDt != ''">
           AND A.APLY_END_DT = #{aplyEndDt}
           </if>
    </select>
    
    <select id="selectUnAsgnRoleByUser" resultType="com.lsitc.domain.auth.vo.RoleUserVo">
    /* comm.userRoleMng.selectUnAsgnRoleByUser : 사용자의 미배정 역할 조회 */
        SELECT A.ROLE_ID 
             , A.ROLE_NM
             , #{userNo} AS USER_NO
             , A.COM_ID
          FROM COMM_ROLE A /* 역할 */
         WHERE 1=1
           AND A.COM_ID = #{session.comId}
           AND NOT EXISTS(
                    SELECT 1
                      FROM COMM_ROLE_USER X /* 역할별사용자 */
                     WHERE 1=1
                       AND X.COM_ID = #{session.comId}
                       AND X.USER_NO = #{userNo}
                       AND X.ROLE_ID = A.ROLE_ID
                ) 
    </select>
    
    <select id="selectAsgnRoleByUser" resultType="com.lsitc.domain.auth.vo.RoleUserVo">
    /* comm.userRoleMng.selectAsgnRoleByUser : 사용자의 역할 조회 */
        SELECT B.ROLE_ID
              ,B.ROLE_NM
              ,A.USER_NO
              ,A.APLY_START_DT
              ,A.APLY_END_DT
              ,A.COM_ID
          FROM COMM_ROLE_USER A /* 역할별사용자 */
         INNER JOIN COMM_ROLE B /* 역할 */ ON A.ROLE_ID = B.ROLE_ID AND A.COM_ID = B.COM_ID
         WHERE 1=1
           AND A.COM_ID = #{session.comId}
           AND A.USER_NO = #{userNo}
    </select>
    
    <select id="selectAsgnMenuByUser" resultType="com.lsitc.domain.common.menu.MenuVo">
    /* comm.userRoleMng.selectAsgnMenuByUser : 사용자의 메뉴 조회 */
        WITH RECURSIVE MENU_LIST AS (
            SELECT /* comm.menu.selectAuthMenu 권한이 있는 메뉴 목록 */
                   D.MENU_ID /* 메뉴ID */
                 , D.MENU_NM /* 메뉴명 */
                 , D.UP_MENU_ID /* 상위메뉴ID */
                 , E.URL /* URL */
                 , D.SORT_SEQ
              FROM COMM_ROLE_USER A /* 역할별사용자 */
             INNER JOIN COMM_MENU_ROLE B ON ( A.ROLE_ID  = B.ROLE_ID ) /* 역할별메뉴 */
             INNER JOIN COMM_MENU D ON ( B.MENU_ID = D.MENU_ID ) /* 메뉴 */
              LEFT OUTER JOIN COMM_PRGM E ON ( D.PRGM_ID = E.PRGM_ID ) /* 프로그램 */
             WHERE 1=1
               /* essential */
               AND A.USER_NO = #{userNo} /* USER_NO */
               AND D.COM_ID = #{session.comId} /*  */
               AND NOW() BETWEEN A.APLY_START_DT AND A.APLY_END_DT /* 현재 유효한것만 */
               AND D.USE_FG = '1' /* 메뉴-사용여부 Y인것만 */
             GROUP
                BY D.MENU_ID
                  ,D.MENU_NM
                  ,D.UP_MENU_ID
                  ,E.URL
                  ,D.SORT_SEQ
        ), MENU_TREE AS (
                SELECT 
                       CONVERT('0', VARCHAR(10)) AS MENU_ID
                      ,CONVERT('ROOT', VARCHAR(200)) AS MENU_NM                      
                      ,CONVERT('', VARCHAR(10)) AS UP_MENU_ID
                      ,CONVERT('', VARCHAR(200)) AS URL
                      ,0 AS LVL
                      ,CONVERT('00000', VARCHAR(100)) AS SORT_SEQ
                 UNION ALL
                SELECT A.MENU_ID
                      ,A.MENU_NM
                      ,A.UP_MENU_ID
                      ,A.URL
                      ,B.LVL + 1 AS LVL
                      ,CONVERT(CONCAT(B.SORT_SEQ, '-', REPEAT('0', 5-LENGTH(A.SORT_SEQ)), A.SORT_SEQ), VARCHAR(100)) AS SORT_SEQ
                  FROM MENU_LIST A
                 INNER
                  JOIN MENU_TREE B ON A.UP_MENU_ID = B.MENU_ID
        )
        SELECT 
               MENU_ID
              ,MENU_NM
              ,UP_MENU_ID
              ,URL
              ,lvl
          FROM MENU_TREE
         ORDER 
            BY SORT_SEQ
    </select>
    <insert id="insertRoleUser">
    /* comm.userRoleMng.insertRoleUser : 역할별사용자 등록 */
        INSERT INTO COMM_ROLE_USER
               (
                COM_ID
               ,ROLE_ID
               ,USER_NO
               ,APLY_START_DT
               ,APLY_END_DT
               ,RMRK
               ,REG_USER_NO
               ,REG_DTTM
               ,PROC_USER_NO
               ,PROC_DTTM    
               )
        VALUES (
                #{session.comId}
               ,#{roleId}
               ,#{userNo}
               ,#{aplyStartDt}
               ,#{aplyEndDt}
               ,#{rmrk}
               ,#{session.userNo}
               ,NOW()
               ,#{session.userNo}
               ,NOW()
               )
    </insert>

    <update id="updateRoleUser">
    /* comm.userRoleMng.updateRoleUser : 역할별사용자 수정 */
        UPDATE COMM_ROLE_USER
           <trim prefix="SET" prefixOverrides=",">
               <if test="aplyStartDt != null">
               ,APLY_START_DT = #{aplyStartDt}
               </if>
               <if test="aplyEndDt != null">
               ,APLY_END_DT = #{aplyEndDt}
               </if>
               <if test="rmrk != null and rmrk != ''">
               ,RMRK = #{rmrk}
               </if>
               ,PROC_USER_NO = #{session.userNo}
               ,PROC_DTTM = NOW()
           </trim>
         WHERE 1=1
           AND COM_ID = #{session.comId} 
           AND ROLE_ID = #{roleId} 
           AND USER_NO = #{userNo} 
    </update>
    
    <delete id="deleteRoleUser">
    /* comm.userRoleMng.deleteRoleUser : 역할별사용자 삭제 */
        DELETE
          FROM COMM_ROLE_USER
         WHERE 1=1
           AND COM_ID = #{session.comId} 
           AND ROLE_ID = #{roleId} 
           AND USER_NO = #{userNo} 
    </delete>
    
    <select id="selectUser" resultType="com.lsitc.domain.auth.vo.UserVo">
    /* comm.user.selectUser : 사용자 조회 */
        SELECT A.COM_ID
              ,A.DEPT_ID
              ,A.USER_NO
              ,A.USER_NM
              ,A.EMAIL
              ,A.MOBLPHON
              ,A.OFFICE_TELNO
              ,A.FAX_TELNO
              ,A.POST_NO
              ,A.POST_ADRES
              ,A.ADRES_DETAIL
              ,A.REG_USER_NO
              ,A.REG_DTTM
              ,A.PROC_USER_NO
              ,A.PROC_DTTM
              ,B.USER_LOGIN_ID
              ,'' AS USER_PSWD
              ,A.BLOC_ID
          FROM COMM_USER A
          LEFT OUTER JOIN COMM_LOGIN_INFO B ON A.USER_NO = B.USER_NO
         WHERE 1=1 
           <if test="comId != null and comId != ''">
           AND A.COM_ID =  #{session.comId}
           </if>
           <if test="blocId != null and blocId != ''">
           AND A.BLOC_ID = #{blocId}
           </if>
           <if test="deptCd != null and deptCd != ''">
           AND A.DEPT_ID = #{deptId}
           </if>
           <if test="userNo != null and userNo != ''">
           AND A.USER_NO LIKE CONCAT('%', #{userNo}, '%')
           </if>
           <if test="userNm != null and userNm != ''">
           AND A.USER_NM LIKE CONCAT('%', #{userNm}, '%')
           </if>
           <if test="userLoginId != null and userLoginId != ''">
           AND B.USER_LOGIN_ID LIKE CONCAT('%', #{userLoginId}, '%')
           </if>
           order by A.USER_NO * 1
    </select>

    <insert id="insertUser">
    /* comm.user.insertUser : 사용자 등록 */
    <selectKey resultType="string" keyProperty="userNo" order="BEFORE">
    	SELECT IFNULL(MAX(USER_NO * 1), 0) + 1 FROM COMM_USER 
    </selectKey>
        INSERT INTO COMM_USER
               (
                COM_ID
               ,DEPT_ID
               ,BLOC_ID
               ,USER_NO
               ,USER_NM
               ,EMAIL
               ,MOBLPHON
               ,OFFICE_TELNO
               ,FAX_TELNO
               ,POST_NO
               ,POST_ADRES
               ,ADRES_DETAIL
               ,REG_USER_NO
               ,REG_DTTM
               ,PROC_USER_NO
               ,PROC_DTTM    
               )
        VALUES (
                #{session.comId}
               ,#{deptId}
               ,#{blocId}
               ,#{userNo}
               ,#{userNm}
               ,#{email}
               ,#{moblphon}
               ,#{officeTelno}
               ,#{faxTelno}
               ,#{postNo}
               ,#{postAdres}
               ,#{adresDetail}
               ,#{session.userNo}
               ,NOW()
               ,#{session.userNo}
               ,NOW()    
               )
    </insert>

    <update id="updateUser">
    /* comm.userRoleMng.updateUser : 사용자 수정 */
        UPDATE COMM_USER
           <trim prefix="SET" prefixOverrides=",">
               <if test="blocId != null and blocId != ''">
               ,BLOC_ID = #{blocId}
               </if>
               <if test="userNm != null">
               ,USER_NM = #{userNm}
               </if>
               <if test="email != null">
               ,EMAIL = #{email}
               </if>
               <if test="moblphon != null">
               ,MOBLPHON = #{moblphon}
               </if>
               <if test="officeTelno != null">
               ,OFFICE_TELNO = #{officeTelno}
               </if>
               <if test="faxTelno != null">
               ,FAX_TELNO = #{faxTelno}
               </if>
               <if test="postNo != null">
               ,POST_NO = #{postNo}
               </if>
               <if test="postAdres != null">
               ,POST_ADRES = #{postAdres}
               </if>
               <if test="adresDetail != null">
               ,ADRES_DETAIL = #{adresDetail}
               </if>
               ,PROC_USER_NO = #{session.userNo}
               ,PROC_DTTM = NOW()
           </trim>
         WHERE 1=1
           AND COM_ID = #{session.comId} 
           AND USER_NO = #{userNo} 
           <if test="deptId != null">
           AND DEPT_ID = #{deptId} 
           </if>
    </update>
    
    <delete id="deleteUser">
    /* comm.userRoleMng.deleteUser : 사용자 삭제 */
        DELETE
          FROM COMM_USER
         WHERE 1=1
           AND COM_ID = #{session.comId} 
           AND USER_NO = #{userNo} 
           <if test="deptId != null">
           AND DEPT_ID = #{deptId} 
           </if>
    </delete>
    
    <select id="selectUserPop" resultType="camelHashMap">
    /* comm.userRoleMng.selectUserPop : [팝업]사용자 조회 */
        SELECT A.COM_ID
            /*   ,A.DEPT_ID
             ,C.DEPT_NM */
              ,A.USER_NO
              ,A.USER_NM
              ,A.EMAIL
              ,A.MOBLPHON
              ,A.OFFICE_TELNO
              ,B.USER_LOGIN_ID
          FROM COMM_USER A
         INNER JOIN COMM_LOGIN_INFO B ON A.USER_NO = B.USER_NO
        /*  INNER JOIN COMM_DEPT_CD C ON A.DEPT_ID = C.DEPT_ID */
         WHERE 1=1 
           AND A.COM_ID = #{session.comId}
           <if test="deptCd != null and deptCd != ''">
           AND A.DEPT_ID = #{deptId}
           </if>
           <if test="userNo != null and userNo != ''">
           AND A.USER_NO LIKE CONCAT('%', #{userNo}, '%')
           </if>
           <if test="userNm != null and userNm != ''">
           AND A.USER_NM LIKE CONCAT('%', #{userNm}, '%')
           </if>
           <if test="userLoginId != null and userLoginId != ''">
           AND B.USER_LOGIN_ID LIKE CONCAT('%', #{userLoginId}, '%')
           </if>
    </select>
    
     <select id="selectComparePswd" resultType="camelHashMap">
     	SELECT
		CASE WHEN A.USER_PSWD = #{userPswd} THEN 'TRUE' ELSE 'FALSE' END AS USER_COMPARE
		FROM COMM_LOGIN_INFO A
		JOIN COMM_USER B
		WHERE B.COM_ID = #{session.comId}
		AND B.USER_NO = #{session.userNo}
		AND A.USER_NO = B.USER_NO
     </select>
     
     <update id="updatePswd">
     	UPDATE COMM_LOGIN_INFO SET
     		USER_PSWD = #{userPswd}
     	   ,PROC_USER_NO = #{session.userNo}
           ,PROC_DTTM = NOW()
     	WHERE USER_NO = #{session.userNo}
     </update>
</mapper>