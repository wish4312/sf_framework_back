<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="comm.base.menuMng">

    <select id="selectAuthMenu" resultType="com.lsitc.domain.auth.vo.CommMenuVo">
    /* comm.menuMng.selectAuthMenu 권한이 있는 메뉴 목록 */
        WITH recursive MENU_LIST AS (
            SELECT /* 권한있는 메뉴 목록 조회 */
                   D.MENU_ID /* 메뉴ID */
                 , D.MENU_NM /* 메뉴명 */
                 , D.UP_MENU_ID /* 상위메뉴ID */
                 , E.URL /* URL */
                 , C.AUTH_CD 
                 , D.SORT_SEQ
                 , E.PRGM_ID
              FROM COMM_ROLE_USER A /* 역할별사용자 */
             INNER JOIN COMM_MENU_ROLE B ON ( A.COM_ID=B.COM_ID and A.ROLE_ID  = B.ROLE_ID ) /* 역할별메뉴 */
              LEFT OUTER JOIN COMM_MENU_ROLE_AUTH C ON ( B.COM_ID=C.COM_ID and B.ROLE_ID = C.ROLE_ID AND B.MENU_ID = C.MENU_ID ) /* 역할별 권한 */ 
             INNER JOIN COMM_MENU D ON ( A.COM_ID=D.COM_ID and B.MENU_ID = D.MENU_ID ) /* 메뉴 */
              LEFT OUTER JOIN COMM_PRGM E ON ( D.PRGM_ID = E.PRGM_ID ) /* 프로그램 */
             WHERE A.COM_ID= 'FEMS'
               /* essential */
               AND A.USER_NO = #{session.userNo} /* USER_NO */
               AND NOW() BETWEEN A.APLY_START_DT AND A.APLY_END_DT /* 현재 유효한것만 */
               AND D.USE_FG = '1' /* 메뉴-사용여부 Y인것만 */
       )
       , MENU_LIST_GRP AS (         
            SELECT /* LIST_AGG이 안되 GRP하기 위함. */
                   A.MENU_ID
                  ,A.MENU_NM
                  ,A.UP_MENU_ID
                  ,A.URL
                  ,A.SORT_SEQ
                  ,(SELECT /* 사용자가 가지는 ROLE */
		              	GROUP_CONCAT(C.AUTH_CD)
					FROM MENU_LIST C
					WHERE 1=1 
		                AND C.MENU_ID = A.MENU_ID
                  	) AS AUTH_CD
                  ,A.PRGM_ID
              FROM MENU_LIST A
             GROUP
                BY A.MENU_ID
                  ,A.MENU_NM
                  ,A.UP_MENU_ID
                  ,A.URL
                  ,A.SORT_SEQ
                  ,A.PRGM_ID
       ), MENU_TREE AS (
                SELECT /* Tree로 변경. */
                       CONVERT('0', VARCHAR(10)) AS MENU_ID
                      ,CONVERT('ROOT', VARCHAR(200)) AS MENU_NM                      
                      ,CONVERT('', VARCHAR(10)) AS UP_MENU_ID
                      ,CONVERT('', VARCHAR(200)) AS URL
                      ,CONVERT('', VARCHAR(4000)) AS AUTH_CD
                      ,0 AS LVL
                      ,CONVERT('00000', VARCHAR(100)) AS SORT_SEQ
                      ,CONVERT('', VARCHAR(10)) AS PRGM_ID
                 UNION ALL
                SELECT A.MENU_ID
                      ,A.MENU_NM
                      ,A.UP_MENU_ID
                      ,A.URL
                      ,CONVERT(A.AUTH_CD, VARCHAR(4000)) AS AUTH_CD 
                      ,B.LVL + 1 AS LVL
                      ,CONVERT(CONCAT(B.SORT_SEQ, '-', REPEAT('0', 5-LENGTH(A.SORT_SEQ)), A.SORT_SEQ), VARCHAR(100)) AS SORT_SEQ
                      ,A.PRGM_ID
                  FROM MENU_LIST_GRP A
                 INNER
                  JOIN MENU_TREE B ON A.UP_MENU_ID = B.MENU_ID
        )
	    SELECT 
	           MENU_ID
	          ,MENU_NM
	          ,UP_MENU_ID
	          ,URL
	          ,AUTH_CD
	          ,lvl
	          ,PRGM_ID
	      FROM MENU_TREE
	     ORDER 
	        BY SORT_SEQ, MENU_NM
    </select>
</mapper>